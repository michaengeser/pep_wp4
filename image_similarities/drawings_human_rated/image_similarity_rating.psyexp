<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/sub-%s/ses-%s/sub-%s_ses-%s_%s_events' % (expInfo['participant'], expInfo['session'], expInfo['participant'], expInfo['session'], expName)" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for participating!" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '200', 'session': &quot;['bathroom','kitchen']&quot;, 'session_number': ''}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="['break.jpg']" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2023.2.3" valType="str" updates="None" name="Use version"/>
    <Param val="[1280, 720]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="image_similarity_rating" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="Pyglet" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="preparation">
      <RoutineSettingsComponent name="preparation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="preparation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="scale_set_up" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="var ysize = 0;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="oldt=0&amp;#10;x_size=8.560&amp;#10;y_size=5.398&amp;#10;screen_height=0&amp;#10;&amp;#10;if win.units=='norm':&amp;#10;    x_scale=.05&amp;#10;    y_scale=.1&amp;#10;    dbase = .0001&amp;#10;    unittext=' norm units'&amp;#10;    vsize=2&amp;#10;elif win.units=='pix':&amp;#10;    x_scale=60&amp;#10;    y_scale=40&amp;#10;    dbase = .1&amp;#10;    unittext=' pixels'&amp;#10;    vsize=win.size[1]&amp;#10;else:&amp;#10;    x_scale=.05&amp;#10;    y_scale=.05&amp;#10;    dbase = .0001&amp;#10;    unittext=' height units'&amp;#10;    vsize=1" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="// screen scaling set up&amp;#10;oldt = 0;&amp;#10;x_size = 8.56;&amp;#10;y_size = 5.398;&amp;#10;screen_height = 0;&amp;#10;if ((psychoJS.window.units === &quot;norm&quot;)) {&amp;#10;    x_scale = 0.05;&amp;#10;    y_scale = 0.1;&amp;#10;    dbase = 0.0001;&amp;#10;    unittext = &quot; norm units&quot;;&amp;#10;    vsize = 2;&amp;#10;} else {&amp;#10;    if ((psychoJS.window.units === &quot;pix&quot;)) {&amp;#10;        x_scale = 60;&amp;#10;        y_scale = 40;&amp;#10;        dbase = 0.1;&amp;#10;        unittext = &quot; pixels&quot;;&amp;#10;        vsize = psychoJS.window.size[1];&amp;#10;    } else {&amp;#10;        x_scale = 0.05;&amp;#10;        y_scale = 0.05;&amp;#10;        dbase = 0.0001;&amp;#10;        unittext = &quot; height units&quot;;&amp;#10;        vsize = 1;&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="scale_set_up" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="full_screen_scaling" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// full screen&amp;#10;psychoJS.window.fullscr = true;&amp;#10;psychoJS.window.adjustScreenSize();" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_scaling" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="condition_matrix" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="trial_condition_path = ((&quot;conditions/conditions_&quot; + expInfo[&quot;session&quot;]) + &quot;.csv&quot;);&amp;#10;practice_file_path = ((&quot;conditions/practice_cond_&quot; + expInfo[&quot;session&quot;]) + &quot;.csv&quot;);&amp;#10;instructions_file_path = ((&quot;instructions/instructions_&quot; + expInfo[&quot;session&quot;]) + &quot;.xlsx&quot;);&amp;#10;seed_num = Number.parseInt(expInfo[&quot;participant&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Specify the file path based on the 'session'&amp;#10;trial_condition_path = &quot;conditions/conditions_&quot; + expInfo['session'] + &quot;.csv&quot;&amp;#10;practice_file_path = &quot;conditions/practice_cond_&quot; + expInfo['session'] + &quot;.csv&quot;&amp;#10;instructions_file_path = &quot;instructions/instructions_&quot; + expInfo['session'] + &quot;.xlsx&quot;&amp;#10;&amp;#10;# Set the random seed based on the participant number&amp;#10;seed_num = int(expInfo['participant'])" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="condition_matrix" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="init_block_message" plugin="None">
        <Param val="block_message = &quot;Block 0&quot;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="block_message = &quot;Block 0&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="init_block_message" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instructions">
      <RoutineSettingsComponent name="instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="startResponse" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="startResponse" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="full_screen" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// full screen&amp;#10;psychoJS.window.fullscr = true;&amp;#10;psychoJS.window.adjustScreenSize();" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="slide_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$slide" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="slide_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.7, 1.7*0.56)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="breakBlocks">
      <RoutineSettingsComponent name="breakBlocks" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="breakBlocks" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="break_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="blockN = 1&amp;#10;maxBlock = 10&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="blockN = 1;&amp;#10;maxBlock = 10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="break_instructions = new visual.TextStim({&quot;win&quot;: psychoJS.window, &quot;text&quot;: `Great job! You can take a break now.&amp;#10;&amp;#10;Try to stay focused!&amp;#10;&amp;#10;Press space to start block ${blockN} of ${maxBlock}.`&amp;#10;, &quot;height&quot;: 0.05, &quot;color&quot;: &quot;black&quot;});&amp;#10;if (((trials.thisN &gt; 0) &amp;&amp; ((trials.thisN % 63) !== 0))) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    if ((blockN === 1)) {&amp;#10;        blockN = (blockN + 1);&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        break_instructions.setAutoDraw(true);&amp;#10;        blockN = (blockN + 1);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="break_instructions = visual.TextStim(&amp;#10;    win = win,&amp;#10;    text = f&quot;Great job! You can take a break now. \n\n Try to stay focused! \n\n Press space to start block {blockN} of {maxBlock}.&quot;,&amp;#10;    height = 0.05,&amp;#10;    color = &quot;black&quot;)&amp;#10;&amp;#10;# do not show if block is not over yet&amp;#10;if trials.thisN &gt; 0 and trials.thisN % 63 != 0:&amp;#10;    continueRoutine = False&amp;#10;else:&amp;#10;    # do not show before first block&amp;#10;    if blockN == 1:&amp;#10;        blockN = blockN + 1&amp;#10;        continueRoutine = False&amp;#10;    else:&amp;#10;        break_instructions.setAutoDraw(True)&amp;#10;        blockN = blockN + 1&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="break_instructions.setAutoDraw(false);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="break_instructions.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="break_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="startBlock" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="startBlock" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ITI">
      <RoutineSettingsComponent name="ITI" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ITI" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="trial">
      <RoutineSettingsComponent name="trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="positions" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="img_x_pos = 7&amp;#10;img1pos = -img_x_pos&amp;#10;img2pos = img_x_pos&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="img_x_pos = 7;&amp;#10;img1pos = (- img_x_pos);&amp;#10;img2pos = img_x_pos;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((Math.random() &gt; 0.5)) {&amp;#10;    img1pos = (- img_x_pos);&amp;#10;    img2pos = img_x_pos;&amp;#10;} else {&amp;#10;    img1pos = img_x_pos;&amp;#10;    img2pos = (- img_x_pos);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if random() &gt; 0.5:&amp;#10;    img1pos = -img_x_pos&amp;#10;    img2pos = img_x_pos&amp;#10;else:&amp;#10;    img1pos = img_x_pos&amp;#10;    img2pos = -img_x_pos" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;stim1pos&quot;, img1pos);&amp;#10;psychoJS.experiment.addData(&quot;stim2pos&quot;, img2pos);&amp;#10;psychoJS.experiment.addData(&quot;block&quot;, (blockN - 1));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('stim1pos', img1pos)&amp;#10;thisExp.addData('stim2pos', img2pos)&amp;#10;thisExp.addData('block', blockN-1)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="positions" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$(img1pos*x_scale, 4*y_scale)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(8.2*x_scale, 8.2*x_scale*0.75)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="polygon_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$(img2pos*x_scale, 4*y_scale)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(8.2*x_scale, 8.2*x_scale*0.75)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="image1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$stim1" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$(img1pos*x_scale, 4*y_scale)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(8*x_scale, 8*x_scale*0.75)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$stim2" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$(img2pos*x_scale, 4*y_scale)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(8*x_scale, 8*x_scale*0.75)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <SliderComponent name="rating_1" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Verdana" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1 - not similar at all&quot;, 2, 3, 4, 5, 6, &quot;7 - very similar&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.35*y_scale" valType="num" updates="constant" name="letterHeight"/>
        <Param val="rating_1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -3.5*y_scale)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(12*x_scale, 0.75*y_scale)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="('triangleMarker',)" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5, 6, 7)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <TextComponent name="question" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Verdana" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.7*y_scale" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="question" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -2*y_scale)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Content" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="rating_2" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Verdana" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1 - not similar at all&quot;, 2, 3, 4, 5, 6, &quot;7 - very similar&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.35*y_scale" valType="num" updates="constant" name="letterHeight"/>
        <Param val="rating_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -7*y_scale)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(12*x_scale, 0.75*y_scale)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="('triangleMarker',)" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5, 6, 7)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <TextComponent name="question_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Verdana" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.7*y_scale" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="question_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -5.5*y_scale)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Drawing style/ability" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="make_block_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="block_message = (((&quot;Block &quot; + (blockN - 1).toString()) + &quot; of &quot;) + maxBlock.toString());&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="block_message = 'Block ' + str(blockN-1) + ' of ' + str(maxBlock)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="make_block_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="block_text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$(16*x_scale, 9.8*y_scale)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$block_message" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="wait_for_both_sliders" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;# need to manually check for escape, as our key checking will interfere with&amp;#10;# Builder's escape check:&amp;#10;if 'escape' in keys: &amp;#10;    core.quit()&amp;#10;&amp;#10;if 'space' in keys:&amp;#10;    # check how many ratings have been completed:&amp;#10;    completed_ratings = 0&amp;#10;    for scale in [rating_1, rating_2]:&amp;#10;        if scale.getRating() is not None:&amp;#10;            completed_ratings = completed_ratings + 1&amp;#10;&amp;#10;    if completed_ratings == 2:&amp;#10;        continueRoutine = False # end now" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    core.quit();&amp;#10;}&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;    completed_ratings = 0;&amp;#10;    for (var scale, _pj_c = 0, _pj_a = [rating_1, rating_2], _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        scale = _pj_a[_pj_c];&amp;#10;        if ((scale.getRating() !== null)) {&amp;#10;            completed_ratings = (completed_ratings + 1);&amp;#10;        }&amp;#10;    }&amp;#10;    if ((completed_ratings === 2)) {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="wait_for_both_sliders" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="practice_over">
      <RoutineSettingsComponent name="practice_over" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="practice_over" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Practice is over.&amp;#10;Well done!&amp;#10;&amp;#10;Press space to proceed to experiment." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="space_practice_over" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="space_practice_over" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="end">
      <RoutineSettingsComponent name="end" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="message_end" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Verdana" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="message_end" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The end!&amp;#10;&amp;#10;Thank you for participating" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="preparation"/>
    <LoopInitiator loopType="TrialHandler" name="instructionsLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'slide': 'instructions/Slide2.jpg'}, {'slide': 'instructions/Slide3.jpg'}, {'slide': 'instructions/Slide4.jpg'}, {'slide': 'instructions/Slide5.jpg'}, {'slide': None}, {'slide': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$instructions_file_path" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="instructionsLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopTerminator name="instructionsLoop"/>
    <LoopInitiator loopType="TrialHandler" name="practice">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('sub1', 110), ('sub2', 133), ('pairID', 'practice'), ('trialID', 1), ('stim1', 'stimuli/own/kitchen/110_kit.jpg'), ('stim2', 'stimuli/own/kitchen/133_kit.jpg')]), OrderedDict([('sub1', 110), ('sub2', 128), ('pairID', 'practice'), ('trialID', 2), ('stim1', 'stimuli/own/kitchen/110_kit.jpg'), ('stim2', 'stimuli/own/kitchen/128_kit.jpg')]), OrderedDict([('sub1', 128), ('sub2', 108), ('pairID', 'practice'), ('trialID', 3), ('stim1', 'stimuli/own/kitchen/128_kit.jpg'), ('stim2', 'stimuli/own/kitchen/108_kit.jpg')]), OrderedDict([('sub1', 110), ('sub2', 107), ('pairID', 'practice'), ('trialID', 4), ('stim1', 'stimuli/own/kitchen/110_kit.jpg'), ('stim2', 'stimuli/own/kitchen/107_kit.jpg')]), OrderedDict([('sub1', 107), ('sub2', 108), ('pairID', 'practice'), ('trialID', 5), ('stim1', 'stimuli/own/kitchen/107_kit.jpg'), ('stim2', 'stimuli/own/kitchen/108_kit.jpg')]), OrderedDict([('sub1', 128), ('sub2', 133), ('pairID', 'practice'), ('trialID', 6), ('stim1', 'stimuli/own/kitchen/128_kit.jpg'), ('stim2', 'stimuli/own/kitchen/133_kit.jpg')]), OrderedDict([('sub1', 107), ('sub2', 128), ('pairID', 'practice'), ('trialID', 7), ('stim1', 'stimuli/own/kitchen/107_kit.jpg'), ('stim2', 'stimuli/own/kitchen/128_kit.jpg')]), OrderedDict([('sub1', 108), ('sub2', 110), ('pairID', 'practice'), ('trialID', 8), ('stim1', 'stimuli/own/kitchen/108_kit.jpg'), ('stim2', 'stimuli/own/kitchen/110_kit.jpg')]), OrderedDict([('sub1', 107), ('sub2', 133), ('pairID', 'practice'), ('trialID', 9), ('stim1', 'stimuli/own/kitchen/107_kit.jpg'), ('stim2', 'stimuli/own/kitchen/133_kit.jpg')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$practice_file_path" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="practice" valType="code"/>
      <Param name="random seed" updates="None" val="seed_num" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="ITI"/>
    <LoopTerminator name="practice"/>
    <Routine name="practice_over"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('sub1', 105), ('sub2', 132), ('pairID', 157), ('trialID', 1), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 130), ('pairID', 214), ('trialID', 2), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 129), ('pairID', 483), ('trialID', 3), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 126), ('pairID', 446), ('trialID', 4), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 131), ('pairID', 411), ('trialID', 5), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 141), ('pairID', 69), ('trialID', 6), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 135), ('pairID', 588), ('trialID', 7), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 136), ('pairID', 247), ('trialID', 8), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 140), ('pairID', 593), ('trialID', 9), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 118), ('pairID', 309), ('trialID', 10), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 117), ('pairID', 47), ('trialID', 11), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 127), ('pairID', 498), ('trialID', 12), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 138), ('pairID', 32), ('trialID', 13), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 127), ('pairID', 527), ('trialID', 14), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 125), ('pairID', 511), ('trialID', 15), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 141), ('pairID', 134), ('trialID', 16), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 109), ('pairID', 136), ('trialID', 17), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/109_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 136), ('pairID', 190), ('trialID', 18), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 134), ('sub2', 139), ('pairID', 607), ('trialID', 19), ('stim1', 'stimuli/own/bathroom/134_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 124), ('pairID', 87), ('trialID', 20), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 117), ('pairID', 332), ('trialID', 21), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 136), ('pairID', 534), ('trialID', 22), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 109), ('pairID', 6), ('trialID', 23), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/109_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 113), ('pairID', 198), ('trialID', 24), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 129), ('pairID', 448), ('trialID', 25), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 141), ('pairID', 279), ('trialID', 26), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 134), ('pairID', 95), ('trialID', 27), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 118), ('pairID', 48), ('trialID', 28), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 134), ('pairID', 217), ('trialID', 29), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 118), ('pairID', 258), ('trialID', 30), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 132), ('pairID', 517), ('trialID', 31), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 138), ('pairID', 302), ('trialID', 32), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 132), ('pairID', 432), ('trialID', 33), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 105), ('pairID', 71), ('trialID', 34), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/105_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 121), ('pairID', 441), ('trialID', 35), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 125), ('pairID', 291), ('trialID', 36), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 131), ('pairID', 125), ('trialID', 37), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 132), ('pairID', 187), ('trialID', 38), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 112), ('pairID', 75), ('trialID', 39), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/112_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 130), ('pairID', 389), ('trialID', 40), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 138), ('pairID', 572), ('trialID', 41), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 129), ('pairID', 268), ('trialID', 42), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 131), ('pairID', 543), ('trialID', 43), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 117), ('pairID', 112), ('trialID', 44), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 138), ('pairID', 162), ('trialID', 45), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 114), ('pairID', 254), ('trialID', 46), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 112), ('pairID', 138), ('trialID', 47), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/112_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 122), ('pairID', 442), ('trialID', 48), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 135), ('pairID', 488), ('trialID', 49), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 129), ('pairID', 528), ('trialID', 50), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 139), ('pairID', 550), ('trialID', 51), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 134), ('pairID', 503), ('trialID', 52), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 132), ('pairID', 322), ('trialID', 53), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 113), ('pairID', 139), ('trialID', 54), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 131), ('pairID', 576), ('trialID', 55), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 121), ('pairID', 312), ('trialID', 56), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 122), ('pairID', 18), ('trialID', 57), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 130), ('pairID', 155), ('trialID', 58), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 126), ('pairID', 526), ('trialID', 59), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 136), ('pairID', 589), ('trialID', 60), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 111), ('pairID', 7), ('trialID', 61), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/111_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 118), ('pairID', 81), ('trialID', 62), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 134), ('pairID', 370), ('trialID', 63), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 132), ('sub2', 140), ('pairID', 601), ('trialID', 64), ('stim1', 'stimuli/own/bathroom/132_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 123), ('pairID', 86), ('trialID', 65), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 137), ('pairID', 248), ('trialID', 66), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 120), ('pairID', 233), ('trialID', 67), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 115), ('pairID', 78), ('trialID', 68), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 137), ('pairID', 220), ('trialID', 69), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 104), ('pairID', 70), ('trialID', 70), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/104_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 139), ('pairID', 222), ('trialID', 71), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 135), ('sub2', 141), ('pairID', 615), ('trialID', 72), ('stim1', 'stimuli/own/bathroom/135_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 125), ('pairID', 340), ('trialID', 73), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 130), ('pairID', 554), ('trialID', 74), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 112), ('pairID', 107), ('trialID', 75), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/112_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 134), ('pairID', 557), ('trialID', 76), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 127), ('pairID', 540), ('trialID', 77), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 121), ('pairID', 177), ('trialID', 78), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 136), ('pairID', 349), ('trialID', 79), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 127), ('pairID', 240), ('trialID', 80), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 135), ('pairID', 558), ('trialID', 81), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 119), ('pairID', 259), ('trialID', 82), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 132), ('pairID', 27), ('trialID', 83), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 131), ('pairID', 243), ('trialID', 84), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 134), ('pairID', 518), ('trialID', 85), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 131), ('pairID', 321), ('trialID', 86), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 139), ('pairID', 193), ('trialID', 87), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 121), ('pairID', 51), ('trialID', 88), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 122), ('pairID', 207), ('trialID', 89), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 138), ('pairID', 536), ('trialID', 90), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 132), ('pairID', 577), ('trialID', 91), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 125), ('pairID', 316), ('trialID', 92), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 114), ('pairID', 170), ('trialID', 93), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 132), ('pairID', 451), ('trialID', 94), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 105), ('pairID', 103), ('trialID', 95), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/105_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 139), ('pairID', 583), ('trialID', 96), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 131), ('pairID', 368), ('trialID', 97), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 138), ('pairID', 221), ('trialID', 98), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 136), ('pairID', 505), ('trialID', 99), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 129), ('pairID', 553), ('trialID', 100), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 136), ('pairID', 219), ('trialID', 101), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 141), ('pairID', 575), ('trialID', 102), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 136), ('sub2', 141), ('pairID', 620), ('trialID', 103), ('stim1', 'stimuli/own/bathroom/136_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 137), ('pairID', 130), ('trialID', 104), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 141), ('pairID', 354), ('trialID', 105), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 139), ('sub2', 141), ('pairID', 629), ('trialID', 106), ('stim1', 'stimuli/own/bathroom/139_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 135), ('pairID', 159), ('trialID', 107), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 137), ('sub2', 141), ('pairID', 624), ('trialID', 108), ('stim1', 'stimuli/own/bathroom/137_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 139), ('pairID', 352), ('trialID', 109), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 116), ('pairID', 307), ('trialID', 110), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 121), ('pairID', 359), ('trialID', 111), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 141), ('pairID', 459), ('trialID', 112), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 116), ('pairID', 282), ('trialID', 113), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 122), ('pairID', 288), ('trialID', 114), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 114), ('pairID', 10), ('trialID', 115), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 126), ('pairID', 211), ('trialID', 116), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 140), ('pairID', 329), ('trialID', 117), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 136), ('pairID', 454), ('trialID', 118), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 130), ('pairID', 295), ('trialID', 119), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 139), ('pairID', 303), ('trialID', 120), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 138), ('sub2', 139), ('pairID', 625), ('trialID', 121), ('stim1', 'stimuli/own/bathroom/138_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 132), ('pairID', 556), ('trialID', 122), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 139), ('pairID', 418), ('trialID', 123), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 124), ('pairID', 362), ('trialID', 124), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 137), ('pairID', 373), ('trialID', 125), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 131), ('pairID', 468), ('trialID', 126), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 134), ('pairID', 392), ('trialID', 127), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 122), ('pairID', 262), ('trialID', 128), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 122), ('pairID', 52), ('trialID', 129), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 130), ('pairID', 124), ('trialID', 130), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 135), ('sub2', 136), ('pairID', 610), ('trialID', 131), ('stim1', 'stimuli/own/bathroom/135_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 124), ('pairID', 339), ('trialID', 132), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 140), ('pairID', 133), ('trialID', 133), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 119), ('pairID', 145), ('trialID', 134), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 118), ('pairID', 14), ('trialID', 135), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 130), ('pairID', 529), ('trialID', 136), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 136), ('pairID', 129), ('trialID', 137), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 129), ('pairID', 541), ('trialID', 138), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 121), ('pairID', 422), ('trialID', 139), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 140), ('pairID', 563), ('trialID', 140), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 140), ('pairID', 458), ('trialID', 141), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 138), ('pairID', 249), ('trialID', 142), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 132), ('pairID', 216), ('trialID', 143), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 120), ('pairID', 83), ('trialID', 144), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 125), ('pairID', 426), ('trialID', 145), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 129), ('pairID', 213), ('trialID', 146), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 131), ('pairID', 186), ('trialID', 147), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 113), ('pairID', 108), ('trialID', 148), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 139), ('pairID', 328), ('trialID', 149), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 136), ('pairID', 300), ('trialID', 150), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 139), ('pairID', 475), ('trialID', 151), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 124), ('pairID', 20), ('trialID', 152), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 103), ('pairID', 2), ('trialID', 153), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/103_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 123), ('pairID', 383), ('trialID', 154), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 106), ('pairID', 5), ('trialID', 155), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/106_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 131), ('pairID', 345), ('trialID', 156), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 139), ('pairID', 438), ('trialID', 157), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 121), ('pairID', 206), ('trialID', 158), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 122), ('pairID', 178), ('trialID', 159), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 125), ('pairID', 238), ('trialID', 160), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 124), ('pairID', 495), ('trialID', 161), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 139), ('pairID', 457), ('trialID', 162), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 140), ('sub2', 141), ('pairID', 630), ('trialID', 163), ('stim1', 'stimuli/own/bathroom/140_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 134), ('pairID', 272), ('trialID', 164), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 126), ('pairID', 121), ('trialID', 165), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 136), ('pairID', 274), ('trialID', 166), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 131), ('pairID', 26), ('trialID', 167), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 114), ('pairID', 77), ('trialID', 168), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 116), ('pairID', 331), ('trialID', 169), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 137), ('pairID', 571), ('trialID', 170), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 137), ('pairID', 395), ('trialID', 171), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 126), ('pairID', 512), ('trialID', 172), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 131), ('pairID', 516), ('trialID', 173), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 124), ('pairID', 290), ('trialID', 174), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 129), ('pairID', 499), ('trialID', 175), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 135), ('sub2', 138), ('pairID', 612), ('trialID', 176), ('stim1', 'stimuli/own/bathroom/135_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 139), ('pairID', 100), ('trialID', 177), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 125), ('pairID', 120), ('trialID', 178), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 141), ('pairID', 585), ('trialID', 179), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 115), ('pairID', 11), ('trialID', 180), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 105), ('pairID', 38), ('trialID', 181), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/105_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 120), ('pairID', 146), ('trialID', 182), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 139), ('pairID', 523), ('trialID', 183), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 130), ('pairID', 449), ('trialID', 184), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 120), ('pairID', 401), ('trialID', 185), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 130), ('pairID', 467), ('trialID', 186), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 136), ('pairID', 520), ('trialID', 187), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 122), ('pairID', 403), ('trialID', 188), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 125), ('pairID', 265), ('trialID', 189), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 121), ('pairID', 84), ('trialID', 190), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 136), ('sub2', 137), ('pairID', 616), ('trialID', 191), ('stim1', 'stimuli/own/bathroom/136_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 119), ('pairID', 379), ('trialID', 192), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 135), ('sub2', 139), ('pairID', 613), ('trialID', 193), ('stim1', 'stimuli/own/bathroom/135_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 124), ('pairID', 425), ('trialID', 194), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 134), ('pairID', 452), ('trialID', 195), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 122), ('pairID', 460), ('trialID', 196), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 131), ('pairID', 555), ('trialID', 197), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 127), ('pairID', 342), ('trialID', 198), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 137), ('pairID', 560), ('trialID', 199), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 117), ('pairID', 13), ('trialID', 200), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 137), ('pairID', 473), ('trialID', 201), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 130), ('pairID', 59), ('trialID', 202), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 141), ('pairID', 420), ('trialID', 203), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 125), ('pairID', 21), ('trialID', 204), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 126), ('pairID', 292), ('trialID', 205), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 118), ('pairID', 144), ('trialID', 206), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 120), ('pairID', 176), ('trialID', 207), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 130), ('pairID', 320), ('trialID', 208), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 138), ('pairID', 192), ('trialID', 209), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 118), ('pairID', 333), ('trialID', 210), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 137), ('pairID', 98), ('trialID', 211), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 106), ('pairID', 72), ('trialID', 212), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/106_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 141), ('pairID', 305), ('trialID', 213), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 126), ('pairID', 89), ('trialID', 214), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 129), ('pairID', 409), ('trialID', 215), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 129), ('pairID', 366), ('trialID', 216), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 113), ('pairID', 253), ('trialID', 217), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 135), ('sub2', 137), ('pairID', 611), ('trialID', 218), ('stim1', 'stimuli/own/bathroom/135_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 137), ('pairID', 275), ('trialID', 219), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 131), ('pairID', 566), ('trialID', 220), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 131), ('pairID', 431), ('trialID', 221), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 137), ('pairID', 490), ('trialID', 222), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 129), ('pairID', 91), ('trialID', 223), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 126), ('pairID', 239), ('trialID', 224), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 139), ('pairID', 508), ('trialID', 225), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 130), ('pairID', 185), ('trialID', 226), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 127), ('pairID', 365), ('trialID', 227), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 132), ('pairID', 244), ('trialID', 228), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 132), ('sub2', 141), ('pairID', 602), ('trialID', 229), ('stim1', 'stimuli/own/bathroom/132_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 112), ('pairID', 197), ('trialID', 230), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/112_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 120), ('pairID', 335), ('trialID', 231), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 137), ('pairID', 65), ('trialID', 232), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 120), ('pairID', 286), ('trialID', 233), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 131), ('pairID', 390), ('trialID', 234), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 126), ('pairID', 407), ('trialID', 235), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 138), ('pairID', 456), ('trialID', 236), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 132), ('pairID', 502), ('trialID', 237), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 141), ('pairID', 440), ('trialID', 238), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 134), ('sub2', 141), ('pairID', 609), ('trialID', 239), ('stim1', 'stimuli/own/bathroom/134_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 118), ('pairID', 284), ('trialID', 240), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 132), ('sub2', 139), ('pairID', 600), ('trialID', 241), ('stim1', 'stimuli/own/bathroom/132_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 118), ('pairID', 113), ('trialID', 242), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 139), ('pairID', 592), ('trialID', 243), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 141), ('pairID', 377), ('trialID', 244), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 130), ('pairID', 25), ('trialID', 245), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 119), ('pairID', 400), ('trialID', 246), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 123), ('pairID', 361), ('trialID', 247), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 139), ('pairID', 250), ('trialID', 248), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 123), ('pairID', 461), ('trialID', 249), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 135), ('pairID', 546), ('trialID', 250), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 126), ('pairID', 481), ('trialID', 251), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 117), ('pairID', 257), ('trialID', 252), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 129), ('pairID', 343), ('trialID', 253), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 125), ('pairID', 210), ('trialID', 254), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 139), ('pairID', 375), ('trialID', 255), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 111), ('pairID', 137), ('trialID', 256), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/111_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 138), ('pairID', 549), ('trialID', 257), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 117), ('pairID', 355), ('trialID', 258), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 138), ('sub2', 141), ('pairID', 627), ('trialID', 259), ('stim1', 'stimuli/own/bathroom/138_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 113), ('pairID', 9), ('trialID', 260), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 134), ('pairID', 470), ('trialID', 261), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 140), ('pairID', 164), ('trialID', 262), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 127), ('pairID', 447), ('trialID', 263), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 115), ('pairID', 200), ('trialID', 264), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 127), ('pairID', 90), ('trialID', 265), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 120), ('pairID', 50), ('trialID', 266), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 141), ('pairID', 510), ('trialID', 267), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 132), ('pairID', 567), ('trialID', 268), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 127), ('pairID', 122), ('trialID', 269), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 134), ('pairID', 347), ('trialID', 270), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 135), ('pairID', 519), ('trialID', 271), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 116), ('pairID', 79), ('trialID', 272), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 138), ('pairID', 491), ('trialID', 273), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 138), ('pairID', 437), ('trialID', 274), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 137), ('pairID', 350), ('trialID', 275), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 140), ('pairID', 278), ('trialID', 276), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 135), ('pairID', 299), ('trialID', 277), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 131), ('pairID', 530), ('trialID', 278), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 130), ('pairID', 542), ('trialID', 279), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 141), ('pairID', 330), ('trialID', 280), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 132), ('pairID', 94), ('trialID', 281), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 129), ('pairID', 58), ('trialID', 282), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 140), ('pairID', 476), ('trialID', 283), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 124), ('pairID', 384), ('trialID', 284), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 117), ('pairID', 283), ('trialID', 285), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 122), ('pairID', 382), ('trialID', 286), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 122), ('pairID', 313), ('trialID', 287), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 123), ('pairID', 338), ('trialID', 288), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 140), ('pairID', 34), ('trialID', 289), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 136), ('pairID', 547), ('trialID', 290), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 127), ('pairID', 293), ('trialID', 291), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 115), ('pairID', 255), ('trialID', 292), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 135), ('pairID', 246), ('trialID', 293), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 137), ('pairID', 436), ('trialID', 294), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 132), ('pairID', 369), ('trialID', 295), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 136), ('pairID', 97), ('trialID', 296), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 132), ('pairID', 271), ('trialID', 297), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 141), ('pairID', 224), ('trialID', 298), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 136), ('pairID', 160), ('trialID', 299), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 134), ('pairID', 188), ('trialID', 300), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 129), ('pairID', 154), ('trialID', 301), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 130), ('pairID', 344), ('trialID', 302), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 138), ('pairID', 374), ('trialID', 303), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 118), ('pairID', 356), ('trialID', 304), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 132), ('pairID', 486), ('trialID', 305), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 116), ('pairID', 46), ('trialID', 306), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 136), ('pairID', 435), ('trialID', 307), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 130), ('pairID', 242), ('trialID', 308), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 123), ('pairID', 19), ('trialID', 309), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 137), ('pairID', 590), ('trialID', 310), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 137), ('pairID', 301), ('trialID', 311), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 134), ('sub2', 135), ('pairID', 603), ('trialID', 312), ('stim1', 'stimuli/own/bathroom/134_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 132), ('pairID', 391), ('trialID', 313), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 130), ('pairID', 565), ('trialID', 314), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 140), ('pairID', 376), ('trialID', 315), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 123), ('pairID', 118), ('trialID', 316), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 140), ('pairID', 398), ('trialID', 317), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 135), ('pairID', 63), ('trialID', 318), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 124), ('pairID', 462), ('trialID', 319), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 130), ('pairID', 367), ('trialID', 320), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 106), ('pairID', 39), ('trialID', 321), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/106_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 119), ('pairID', 175), ('trialID', 322), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 120), ('pairID', 205), ('trialID', 323), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 125), ('pairID', 463), ('trialID', 324), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 138), ('pairID', 351), ('trialID', 325), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 137), ('pairID', 548), ('trialID', 326), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 115), ('pairID', 110), ('trialID', 327), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 140), ('pairID', 524), ('trialID', 328), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 140), ('pairID', 304), ('trialID', 329), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 136), ('pairID', 489), ('trialID', 330), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 135), ('pairID', 348), ('trialID', 331), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 134), ('sub2', 136), ('pairID', 604), ('trialID', 332), ('stim1', 'stimuli/own/bathroom/134_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 135), ('pairID', 128), ('trialID', 333), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 134), ('pairID', 28), ('trialID', 334), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 116), ('pairID', 256), ('trialID', 335), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 138), ('pairID', 507), ('trialID', 336), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 122), ('pairID', 148), ('trialID', 337), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 121), ('pairID', 336), ('trialID', 338), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 140), ('pairID', 419), ('trialID', 339), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 135), ('pairID', 414), ('trialID', 340), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 132), ('pairID', 469), ('trialID', 341), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 131), ('pairID', 501), ('trialID', 342), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 123), ('pairID', 263), ('trialID', 343), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 125), ('pairID', 385), ('trialID', 344), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 138), ('sub2', 140), ('pairID', 626), ('trialID', 345), ('stim1', 'stimuli/own/bathroom/138_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 130), ('pairID', 430), ('trialID', 346), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 116), ('pairID', 229), ('trialID', 347), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 123), ('pairID', 179), ('trialID', 348), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 137), ('sub2', 139), ('pairID', 622), ('trialID', 349), ('stim1', 'stimuli/own/bathroom/137_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 132), ('pairID', 61), ('trialID', 350), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 132), ('pairID', 412), ('trialID', 351), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 109), ('pairID', 166), ('trialID', 352), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/109_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 130), ('pairID', 92), ('trialID', 353), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 124), ('pairID', 315), ('trialID', 354), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 136), ('pairID', 570), ('trialID', 355), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 125), ('pairID', 445), ('trialID', 356), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 141), ('pairID', 494), ('trialID', 357), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 119), ('pairID', 114), ('trialID', 358), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 126), ('pairID', 182), ('trialID', 359), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 136), ('pairID', 30), ('trialID', 360), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 109), ('pairID', 105), ('trialID', 361), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/109_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 121), ('pairID', 116), ('trialID', 362), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 124), ('pairID', 405), ('trialID', 363), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 135), ('pairID', 29), ('trialID', 364), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 141), ('pairID', 525), ('trialID', 365), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 106), ('pairID', 135), ('trialID', 366), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/106_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 134), ('pairID', 433), ('trialID', 367), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 139), ('pairID', 67), ('trialID', 368), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 134), ('pairID', 62), ('trialID', 369), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 131), ('pairID', 485), ('trialID', 370), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 134), ('pairID', 587), ('trialID', 371), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 104), ('pairID', 3), ('trialID', 372), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/104_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 105), ('pairID', 4), ('trialID', 373), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/105_bat.jpg')]), OrderedDict([('sub1', 132), ('sub2', 135), ('pairID', 596), ('trialID', 374), ('stim1', 'stimuli/own/bathroom/132_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 117), ('pairID', 202), ('trialID', 375), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 125), ('pairID', 406), ('trialID', 376), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 141), ('pairID', 564), ('trialID', 377), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 124), ('pairID', 237), ('trialID', 378), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 124), ('pairID', 479), ('trialID', 379), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 138), ('pairID', 474), ('trialID', 380), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 129), ('pairID', 514), ('trialID', 381), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 136), ('sub2', 140), ('pairID', 619), ('trialID', 382), ('stim1', 'stimuli/own/bathroom/136_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 109), ('pairID', 40), ('trialID', 383), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/109_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 125), ('pairID', 88), ('trialID', 384), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 122), ('pairID', 117), ('trialID', 385), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 127), ('pairID', 183), ('trialID', 386), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 127), ('pairID', 153), ('trialID', 387), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 135), ('pairID', 569), ('trialID', 388), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 121), ('pairID', 234), ('trialID', 389), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 131), ('pairID', 93), ('trialID', 390), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 120), ('pairID', 115), ('trialID', 391), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 116), ('pairID', 201), ('trialID', 392), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 135), ('pairID', 96), ('trialID', 393), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 141), ('pairID', 165), ('trialID', 394), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 127), ('pairID', 318), ('trialID', 395), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 116), ('pairID', 111), ('trialID', 396), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 135), ('pairID', 504), ('trialID', 397), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 136), ('pairID', 372), ('trialID', 398), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 114), ('pairID', 280), ('trialID', 399), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 141), ('pairID', 594), ('trialID', 400), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 140), ('pairID', 223), ('trialID', 401), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 132), ('pairID', 126), ('trialID', 402), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 138), ('pairID', 522), ('trialID', 403), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 130), ('pairID', 484), ('trialID', 404), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 140), ('pairID', 584), ('trialID', 405), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 131), ('pairID', 60), ('trialID', 406), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 130), ('pairID', 515), ('trialID', 407), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 123), ('pairID', 443), ('trialID', 408), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 137), ('pairID', 31), ('trialID', 409), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 129), ('pairID', 429), ('trialID', 410), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 138), ('pairID', 396), ('trialID', 411), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 119), ('pairID', 49), ('trialID', 412), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 121), ('pairID', 402), ('trialID', 413), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 119), ('pairID', 285), ('trialID', 414), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 117), ('pairID', 143), ('trialID', 415), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 113), ('pairID', 226), ('trialID', 416), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 139), ('pairID', 163), ('trialID', 417), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 126), ('pairID', 152), ('trialID', 418), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 121), ('pairID', 287), ('trialID', 419), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 114), ('pairID', 199), ('trialID', 420), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 139), ('pairID', 562), ('trialID', 421), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 134), ('pairID', 323), ('trialID', 422), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 115), ('pairID', 141), ('trialID', 423), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 122), ('pairID', 423), ('trialID', 424), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 123), ('pairID', 314), ('trialID', 425), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 125), ('pairID', 496), ('trialID', 426), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 127), ('pairID', 57), ('trialID', 427), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 111), ('pairID', 106), ('trialID', 428), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/111_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 135), ('pairID', 324), ('trialID', 429), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 129), ('pairID', 184), ('trialID', 430), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 118), ('pairID', 231), ('trialID', 431), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 119), ('pairID', 15), ('trialID', 432), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 140), ('pairID', 574), ('trialID', 433), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 135), ('pairID', 533), ('trialID', 434), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 136), ('pairID', 394), ('trialID', 435), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 124), ('pairID', 180), ('trialID', 436), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 121), ('pairID', 147), ('trialID', 437), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 126), ('pairID', 364), ('trialID', 438), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 119), ('pairID', 82), ('trialID', 439), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 138), ('pairID', 66), ('trialID', 440), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 119), ('pairID', 204), ('trialID', 441), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 141), ('pairID', 399), ('trialID', 442), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 126), ('pairID', 427), ('trialID', 443), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 126), ('pairID', 266), ('trialID', 444), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 119), ('pairID', 310), ('trialID', 445), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 112), ('pairID', 225), ('trialID', 446), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/112_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 141), ('pairID', 35), ('trialID', 447), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 134), ('sub2', 138), ('pairID', 606), ('trialID', 448), ('stim1', 'stimuli/own/bathroom/134_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 135), ('pairID', 579), ('trialID', 449), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 129), ('pairID', 123), ('trialID', 450), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 130), ('pairID', 269), ('trialID', 451), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 115), ('pairID', 281), ('trialID', 452), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 136), ('pairID', 325), ('trialID', 453), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 134), ('pairID', 245), ('trialID', 454), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 119), ('pairID', 357), ('trialID', 455), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 125), ('pairID', 363), ('trialID', 456), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 136), ('pairID', 415), ('trialID', 457), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 138), ('pairID', 327), ('trialID', 458), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 109), ('pairID', 73), ('trialID', 459), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/109_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 140), ('pairID', 68), ('trialID', 460), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 111), ('pairID', 74), ('trialID', 461), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/111_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 132), ('pairID', 544), ('trialID', 462), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 123), ('pairID', 53), ('trialID', 463), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 123), ('pairID', 149), ('trialID', 464), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 120), ('pairID', 260), ('trialID', 465), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 123), ('pairID', 404), ('trialID', 466), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 140), ('pairID', 493), ('trialID', 467), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 134), ('pairID', 487), ('trialID', 468), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 126), ('pairID', 464), ('trialID', 469), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 126), ('pairID', 56), ('trialID', 470), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 129), ('pairID', 388), ('trialID', 471), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 132), ('pairID', 346), ('trialID', 472), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 134), ('pairID', 568), ('trialID', 473), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 124), ('pairID', 119), ('trialID', 474), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 138), ('pairID', 99), ('trialID', 475), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 135), ('pairID', 273), ('trialID', 476), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 138), ('pairID', 417), ('trialID', 477), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 123), ('pairID', 424), ('trialID', 478), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 131), ('pairID', 270), ('trialID', 479), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 122), ('pairID', 360), ('trialID', 480), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 117), ('pairID', 80), ('trialID', 481), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 118), ('pairID', 203), ('trialID', 482), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 137), ('pairID', 191), ('trialID', 483), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 136), ('pairID', 559), ('trialID', 484), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 123), ('pairID', 236), ('trialID', 485), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 125), ('pairID', 181), ('trialID', 486), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 127), ('pairID', 267), ('trialID', 487), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 137), ('pairID', 416), ('trialID', 488), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 141), ('pairID', 552), ('trialID', 489), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 118), ('pairID', 174), ('trialID', 490), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 135), ('pairID', 471), ('trialID', 491), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 113), ('pairID', 76), ('trialID', 492), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 129), ('pairID', 319), ('trialID', 493), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 120), ('pairID', 421), ('trialID', 494), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 129), ('sub2', 139), ('pairID', 573), ('trialID', 495), ('stim1', 'stimuli/own/bathroom/129_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 139), ('sub2', 140), ('pairID', 628), ('trialID', 496), ('stim1', 'stimuli/own/bathroom/139_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 140), ('pairID', 538), ('trialID', 497), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 138), ('pairID', 131), ('trialID', 498), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 114), ('pairID', 109), ('trialID', 499), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 141), ('pairID', 102), ('trialID', 500), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 121), ('pairID', 261), ('trialID', 501), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 125), ('pairID', 151), ('trialID', 502), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 106), ('pairID', 104), ('trialID', 503), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/106_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 115), ('pairID', 306), ('trialID', 504), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 138), ('pairID', 276), ('trialID', 505), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 117), ('pairID', 308), ('trialID', 506), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 138), ('pairID', 582), ('trialID', 507), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 127), ('pairID', 513), ('trialID', 508), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 134), ('pairID', 298), ('trialID', 509), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 115), ('pairID', 45), ('trialID', 510), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 137), ('pairID', 506), ('trialID', 511), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 125), ('pairID', 480), ('trialID', 512), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 134), ('pairID', 127), ('trialID', 513), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 140), ('pairID', 194), ('trialID', 514), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 130), ('pairID', 410), ('trialID', 515), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 119), ('pairID', 232), ('trialID', 516), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 140), ('pairID', 353), ('trialID', 517), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 135), ('pairID', 453), ('trialID', 518), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 129), ('pairID', 24), ('trialID', 519), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 119), ('pairID', 334), ('trialID', 520), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/119_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 126), ('pairID', 341), ('trialID', 521), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 141), ('pairID', 477), ('trialID', 522), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 125), ('pairID', 55), ('trialID', 523), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/125_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 137), ('pairID', 535), ('trialID', 524), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 124), ('pairID', 444), ('trialID', 525), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 113), ('pairID', 169), ('trialID', 526), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 134), ('pairID', 532), ('trialID', 527), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 136), ('pairID', 64), ('trialID', 528), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 140), ('pairID', 101), ('trialID', 529), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 137), ('pairID', 326), ('trialID', 530), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 131), ('pairID', 156), ('trialID', 531), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 134), ('pairID', 578), ('trialID', 532), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 127), ('pairID', 387), ('trialID', 533), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 123), ('pairID', 208), ('trialID', 534), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 104), ('pairID', 37), ('trialID', 535), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/104_bat.jpg')]), OrderedDict([('sub1', 134), ('sub2', 137), ('pairID', 605), ('trialID', 536), ('stim1', 'stimuli/own/bathroom/134_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 114), ('pairID', 44), ('trialID', 537), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 141), ('pairID', 195), ('trialID', 538), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 115), ('pairID', 228), ('trialID', 539), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 139), ('pairID', 33), ('trialID', 540), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 124), ('sub2', 137), ('pairID', 521), ('trialID', 541), ('stim1', 'stimuli/own/bathroom/124_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 135), ('pairID', 393), ('trialID', 542), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 139), ('pairID', 277), ('trialID', 543), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 127), ('pairID', 465), ('trialID', 544), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 116), ('pairID', 142), ('trialID', 545), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 137), ('pairID', 161), ('trialID', 546), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 135), ('pairID', 434), ('trialID', 547), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 111), ('pairID', 196), ('trialID', 548), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/111_bat.jpg')]), OrderedDict([('sub1', 132), ('sub2', 136), ('pairID', 597), ('trialID', 549), ('stim1', 'stimuli/own/bathroom/132_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 134), ('pairID', 413), ('trialID', 550), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 129), ('pairID', 294), ('trialID', 551), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 123), ('pairID', 289), ('trialID', 552), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 134), ('pairID', 545), ('trialID', 553), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 139), ('pairID', 537), ('trialID', 554), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 129), ('pairID', 466), ('trialID', 555), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 135), ('pairID', 189), ('trialID', 556), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 139), ('pairID', 397), ('trialID', 557), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 132), ('pairID', 297), ('trialID', 558), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 114), ('pairID', 227), ('trialID', 559), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 126), ('pairID', 497), ('trialID', 560), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 120), ('pairID', 311), ('trialID', 561), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 137), ('sub2', 140), ('pairID', 623), ('trialID', 562), ('stim1', 'stimuli/own/bathroom/137_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 139), ('pairID', 492), ('trialID', 563), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 120), ('pairID', 16), ('trialID', 564), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 141), ('pairID', 252), ('trialID', 565), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 120), ('pairID', 358), ('trialID', 566), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 114), ('pairID', 140), ('trialID', 567), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/114_bat.jpg')]), OrderedDict([('sub1', 137), ('sub2', 138), ('pairID', 621), ('trialID', 568), ('stim1', 'stimuli/own/bathroom/137_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 104), ('sub2', 139), ('pairID', 132), ('trialID', 569), ('stim1', 'stimuli/own/bathroom/104_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 102), ('pairID', 1), ('trialID', 570), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/102_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 140), ('pairID', 509), ('trialID', 571), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 127), ('pairID', 428), ('trialID', 572), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 113), ('sub2', 131), ('pairID', 296), ('trialID', 573), ('stim1', 'stimuli/own/bathroom/113_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 119), ('sub2', 140), ('pairID', 439), ('trialID', 574), ('stim1', 'stimuli/own/bathroom/119_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 103), ('pairID', 36), ('trialID', 575), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/103_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 141), ('pairID', 539), ('trialID', 576), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/141_bat.jpg')]), OrderedDict([('sub1', 125), ('sub2', 132), ('pairID', 531), ('trialID', 577), ('stim1', 'stimuli/own/bathroom/125_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 115), ('pairID', 171), ('trialID', 578), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/115_bat.jpg')]), OrderedDict([('sub1', 132), ('sub2', 134), ('pairID', 595), ('trialID', 579), ('stim1', 'stimuli/own/bathroom/132_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 124), ('pairID', 54), ('trialID', 580), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 135), ('sub2', 140), ('pairID', 614), ('trialID', 581), ('stim1', 'stimuli/own/bathroom/135_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 111), ('pairID', 167), ('trialID', 582), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/111_bat.jpg')]), OrderedDict([('sub1', 118), ('sub2', 127), ('pairID', 408), ('trialID', 583), ('stim1', 'stimuli/own/bathroom/118_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 132), ('sub2', 137), ('pairID', 598), ('trialID', 584), ('stim1', 'stimuli/own/bathroom/132_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 127), ('sub2', 138), ('pairID', 561), ('trialID', 585), ('stim1', 'stimuli/own/bathroom/127_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 116), ('pairID', 12), ('trialID', 586), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 112), ('pairID', 8), ('trialID', 587), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/112_bat.jpg')]), OrderedDict([('sub1', 136), ('sub2', 139), ('pairID', 618), ('trialID', 588), ('stim1', 'stimuli/own/bathroom/136_bat.jpg'), ('stim2', 'stimuli/own/bathroom/139_bat.jpg')]), OrderedDict([('sub1', 132), ('sub2', 138), ('pairID', 599), ('trialID', 589), ('stim1', 'stimuli/own/bathroom/132_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 116), ('sub2', 135), ('pairID', 371), ('trialID', 590), ('stim1', 'stimuli/own/bathroom/116_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 140), ('pairID', 251), ('trialID', 591), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 116), ('pairID', 172), ('trialID', 592), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/116_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 131), ('pairID', 450), ('trialID', 593), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')]), OrderedDict([('sub1', 136), ('sub2', 138), ('pairID', 617), ('trialID', 594), ('stim1', 'stimuli/own/bathroom/136_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 113), ('pairID', 43), ('trialID', 595), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/113_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 111), ('pairID', 41), ('trialID', 596), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/111_bat.jpg')]), OrderedDict([('sub1', 103), ('sub2', 122), ('pairID', 85), ('trialID', 597), ('stim1', 'stimuli/own/bathroom/103_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 126), ('pairID', 22), ('trialID', 598), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 129), ('pairID', 241), ('trialID', 599), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/129_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 127), ('pairID', 212), ('trialID', 600), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 121), ('pairID', 17), ('trialID', 601), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 126), ('sub2', 140), ('pairID', 551), ('trialID', 602), ('stim1', 'stimuli/own/bathroom/126_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 112), ('pairID', 168), ('trialID', 603), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/112_bat.jpg')]), OrderedDict([('sub1', 121), ('sub2', 136), ('pairID', 472), ('trialID', 604), ('stim1', 'stimuli/own/bathroom/121_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 137), ('pairID', 581), ('trialID', 605), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 126), ('pairID', 386), ('trialID', 606), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 120), ('pairID', 380), ('trialID', 607), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/120_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 124), ('pairID', 150), ('trialID', 608), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 121), ('pairID', 381), ('trialID', 609), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/121_bat.jpg')]), OrderedDict([('sub1', 106), ('sub2', 117), ('pairID', 173), ('trialID', 610), ('stim1', 'stimuli/own/bathroom/106_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 127), ('pairID', 482), ('trialID', 611), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 120), ('sub2', 137), ('pairID', 455), ('trialID', 612), ('stim1', 'stimuli/own/bathroom/120_bat.jpg'), ('stim2', 'stimuli/own/bathroom/137_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 132), ('pairID', 586), ('trialID', 613), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/132_bat.jpg')]), OrderedDict([('sub1', 131), ('sub2', 138), ('pairID', 591), ('trialID', 614), ('stim1', 'stimuli/own/bathroom/131_bat.jpg'), ('stim2', 'stimuli/own/bathroom/138_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 124), ('pairID', 209), ('trialID', 615), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 117), ('pairID', 230), ('trialID', 616), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/117_bat.jpg')]), OrderedDict([('sub1', 105), ('sub2', 134), ('pairID', 158), ('trialID', 617), ('stim1', 'stimuli/own/bathroom/105_bat.jpg'), ('stim2', 'stimuli/own/bathroom/134_bat.jpg')]), OrderedDict([('sub1', 101), ('sub2', 127), ('pairID', 23), ('trialID', 618), ('stim1', 'stimuli/own/bathroom/101_bat.jpg'), ('stim2', 'stimuli/own/bathroom/127_bat.jpg')]), OrderedDict([('sub1', 115), ('sub2', 122), ('pairID', 337), ('trialID', 619), ('stim1', 'stimuli/own/bathroom/115_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 134), ('sub2', 140), ('pairID', 608), ('trialID', 620), ('stim1', 'stimuli/own/bathroom/134_bat.jpg'), ('stim2', 'stimuli/own/bathroom/140_bat.jpg')]), OrderedDict([('sub1', 112), ('sub2', 124), ('pairID', 264), ('trialID', 621), ('stim1', 'stimuli/own/bathroom/112_bat.jpg'), ('stim2', 'stimuli/own/bathroom/124_bat.jpg')]), OrderedDict([('sub1', 122), ('sub2', 123), ('pairID', 478), ('trialID', 622), ('stim1', 'stimuli/own/bathroom/122_bat.jpg'), ('stim2', 'stimuli/own/bathroom/123_bat.jpg')]), OrderedDict([('sub1', 123), ('sub2', 130), ('pairID', 500), ('trialID', 623), ('stim1', 'stimuli/own/bathroom/123_bat.jpg'), ('stim2', 'stimuli/own/bathroom/130_bat.jpg')]), OrderedDict([('sub1', 114), ('sub2', 126), ('pairID', 317), ('trialID', 624), ('stim1', 'stimuli/own/bathroom/114_bat.jpg'), ('stim2', 'stimuli/own/bathroom/126_bat.jpg')]), OrderedDict([('sub1', 117), ('sub2', 118), ('pairID', 378), ('trialID', 625), ('stim1', 'stimuli/own/bathroom/117_bat.jpg'), ('stim2', 'stimuli/own/bathroom/118_bat.jpg')]), OrderedDict([('sub1', 111), ('sub2', 122), ('pairID', 235), ('trialID', 626), ('stim1', 'stimuli/own/bathroom/111_bat.jpg'), ('stim2', 'stimuli/own/bathroom/122_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 135), ('pairID', 218), ('trialID', 627), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/135_bat.jpg')]), OrderedDict([('sub1', 102), ('sub2', 112), ('pairID', 42), ('trialID', 628), ('stim1', 'stimuli/own/bathroom/102_bat.jpg'), ('stim2', 'stimuli/own/bathroom/112_bat.jpg')]), OrderedDict([('sub1', 130), ('sub2', 136), ('pairID', 580), ('trialID', 629), ('stim1', 'stimuli/own/bathroom/130_bat.jpg'), ('stim2', 'stimuli/own/bathroom/136_bat.jpg')]), OrderedDict([('sub1', 109), ('sub2', 131), ('pairID', 215), ('trialID', 630), ('stim1', 'stimuli/own/bathroom/109_bat.jpg'), ('stim2', 'stimuli/own/bathroom/131_bat.jpg')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$trial_condition_path" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="seed_num" valType="code"/>
    </LoopInitiator>
    <Routine name="breakBlocks"/>
    <Routine name="ITI"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="end"/>
  </Flow>
</PsychoPy2experiment>
